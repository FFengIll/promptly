# https://taskfile.dev

version: '3'

vars:
  GREETING: Hello, World!

tasks:
  default:
    cmds:
      - echo "{{.GREETING}}"
    silent: true
  
  build:
    cmds:
      - task: black
      - task: gen
      - task: dist
  
  install:
    desc: "install deps for the project"
    dir: "{{.ROOT_DIR}}"
    cmds:
      - task: install-node
      - task: install-python
  
  install-node:
    desc: "install node deps for the project"
    dir: "{{.ROOT_DIR}}/web"
    cmds:
      - pnpm install

  install-python:
    desc: "install python deps for the project"
    dir: "{{.ROOT_DIR}}"
    cmds:
      # - python3 -m pip install -U pip
      - pip3 install poetry
      - poetry install
  
  black:
    desc: "format python with black"
    cmds:
      - black .
  
  db-start:
    desc: "create db via docker"
    dir: "{{.ROOT_DIR}}"
    cmds:
      - mkdir -p ./data/mongodb
      - docker run --name promptly-mongo -p 27017:27017 -p 8001:8001 -v ./data/mongodb:/data/db -d mongo || echo "done"
      - docker start promptly-mongo
  
  db-restart:
    desc: "resest db via docker"
    dir: "{{.ROOT_DIR}}"
    cmds:
      - task: db-stop
      - task: db-start
  
  db-stop:
    desc: "stop db via docker"
    dir: "{{.ROOT_DIR}}"
    cmds:
      - docker stop promptly-mongo || echo "done"
      - docker container remove promptly-mongo || echo "done"
  
  db-backup:
    desc: "backup db via docker"
    cmds:
      - |
        docker exec -it promptly-mongo \
        mongodump --db promptly --out /data/db/backup/
    
  db-cleanup:
    desc: "clear db journal"
    dir: "{{.ROOT_DIR}}"
    cmds:
      - task: db-stop
      - rm -rf ./data/mongodb/journal
  
  gen:
    desc: "generate sdk via swagger"
    dir: "{{.ROOT_DIR}}"
    cmds:
      - rm -rf ./web/src/sdk
      - poetry run python bin/swagger.py
      - swagger-codegen generate -i ./data/swagger.json -l typescript-axios -o ./web/src/sdk
      - git add ./web/src/sdk
  
  dist:
    desc: "build for dist"
    dir: "{{.ROOT_DIR}}/web"
    cmds:
      - pnpm run build-only
  
  front:
    desc: start front for dev
    dir: "{{.ROOT_DIR}}/web"
    aliases:
      - "web"
      - "node"
    cmds:
      - pnpm run dev
  
  backend:
    desc: start backend for dev
    dir: "{{.ROOT_DIR}}"
    aliases:
      - "py"
    cmds:
      - task: db-start
      - poetry run python bin/main.py
  
  run:
    desc: run server without reload
    dir: "{{.ROOT_DIR}}"
    cmds:
      - task: db-start
      - poetry run uvicorn bin.main:app
